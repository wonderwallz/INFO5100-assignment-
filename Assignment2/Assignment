package Assignment2;





import Assignment2.Employee;

/**
 * Submit it on or before 22nd September 2019 , 12:00 pm
 */
public class Assignment2 {
    /*
        This method should return the sum of salaries of employees having salary greater than 5000
        Note: Employee array is passed, not employee
     */
    public double salaryGreaterThanFiveThousand(Employee[] employees) {
        // @TODO
    	double sum=0.0;
    	for(int i=0;i<employees.length;i++) {
    		if(employees[i].getSalary()>5000) {
    			sum=sum+employees[i].getSalary();
    		}
    	}
        System.out.println(sum);
    	return sum;
        
    }

    
    /*
        This method should print either "Fizz", "Buzz" or "FizzBuzz"
        "Fizz" - if id of employee is divisible by 3
        "Buzz" - if id of employee is divisible by 5
        "FizzBuzz" - if id of employee is divisible by both 3 and 5
     */
    public void fizzBuzz(Employee employee) {
        // @TODO
    	int a = employee.getId();
    	if((a%3)==0) {
    		System.out.println("Fizz");
    	}
    	else if((a%5==0)) {
    		System.out.println("Buzz");
    	}
    	else if(((a%3)==0) && ((a%5)==0)){
    		System.out.println("FizzBuzz");
    	}
    	
    }

    
    /*
        This method should calculate tax for an employee in dollars
        If salary of employee is less than or equal to 2500, tax should be 10%
        If salary of employee is greater than 2500 but less than or equal to 5000, tax should be 25%
        If salary of employee is greater than 5000, tax should be 35%
    */
    public double calculateTax(Employee employee) {
        // @TODO
    	double b = employee.getSalary();
    	double tax;
    	if(b<=2500) {
    		tax = employee.getSalary()*0.1;
    	}
    	else if((b>2500)&&(b<=5000)) {
    		tax = employee.getSalary()*0.25;
    	}
    	else {
    		tax = employee.getSalary()*0.35;
    	}
    	System.out.println(tax);
        return 0.0;
    }
    
    
    /*
        We are given two employee objects.
        Implement this method to swap salaries of employees
    */
    public void swap(Employee firstEmployee, Employee secondEmployee) {
        // @TODO
        System.out.println(firstEmployee.getSalary());
        System.out.println(secondEmployee.getSalary());
        double a = firstEmployee.getSalary();
        firstEmployee.setSalary(secondEmployee.getSalary());
        secondEmployee.setSalary(a);
        System.out.println(firstEmployee.getSalary());
        System.out.println(secondEmployee.getSalary());
    }

    
    /*
        Return number of employees whose age is greater than 50
        Note: Employee array is passed, not employee
     */
    public int employeesAgeGreaterThan50(Employee[] employees) {
        // @TODO
    	int number = 0;
    	for(int i=0;i<employees.length;i++) {
    		if(employees[i].getAge()>50) {
    			number = number+1;
    		}
    	}
    	System.out.println(number);
        return number;
    }

    
    /*
        Implement this method to reverse firstName of employee.
        Ex. Before: employee.getFirstName() -> "John"
        After : employee.getFirstName() -> "nhoJ"
     */
    public void reverseFirstName(Employee employee) {
       
		// @TODO
    	String name = employee.getFirstName();
    	int length = name.length();
    	char[] array = name.toCharArray();
    	int i = 0;
    	int j = array.length-1;
    	while(i<j) {
    		char c = array[i];
    		array[i++] = array[j];
    		array[j--] = c;
    	}
    	employee.setFirstName(new String(array));
    	System.out.println(employee.getFirstName());
    	
    	
    }

    
    /*
        Print "true" if employee's first name contain one or more digits
        Print "false" if employee's first name doesn't contain any digit
        Ex: employee.getFirstName() -> "ha8l" == true
        employee.getFirstName() -> "hail" == false
     */
    public void isContainDigit(Employee employee) {
        // @TODO
    	String a = employee.getFirstName();
    	for(int i=0;i<a.length();i++) {
    	  a.charAt(i);
          if(Character.isDigit(a.charAt(i))) {
    		  System.out.println(true);
            return;
    	  }
    	}
       System.out.println(false);   
    }

    
     /*
        Write a method to raise an employee's salary to three times of his/her original salary.
        Eg: original salary was 1000/month. After using this method, the salary is 3000/month.
        DO NOT change the input in this method.
        Try to add a new method in Employee class: public void raiseSalary(double byPercent) 
        Call this new method.
     */
    public void tripleSalary(Employee employee) {
        // @TODO
    	double byPercent = 3.0;
    	employee.raiseSalary(byPercent);
    	System.out.println(employee.getSalary());
    	
    }
    
    
    //Additional question for extra credit
    /*
        Implement this method to convert String[] to employees array.
        Ex: String[] employees = new String[]{"1,John,24,7500", "2,Hail,28,7899.90"};
        This String array of length 2 contains 2 employees in form of string, where
        id = 1
        firstName=John
        age=24
        salary=7500
        convert each string to employee object.
        Hint: Use String methods. Refer : https://docs.oracle.com/javase/7/docs/api/java/lang/String.html
     */
    public Employee[] createEmployees(String[] employeesStr) {
        Employee[] employees = new Employee[employeesStr.length];
        // @TODO
        return employees;
    }

    public static void main(String[] args){
    	Assignment2 assignment = new Assignment2(); 
    	Employee[] employees = new Employee[4];
         employees[0] = new Employee(1,"Lucy",24,4300);
         employees[1] = new Employee(2,"Joe",25,6250);
         employees[2] = new Employee(3,"Laura",23,6666);
         employees[3] = new Employee(4,"Mike",51,7150); 
         
         assignment.salaryGreaterThanFiveThousand(employees);
         assignment.fizzBuzz(employees[2]);
         assignment.calculateTax(employees[0]);
         assignment.swap(employees[2], employees[3]);
         assignment.employeesAgeGreaterThan50(employees);
         assignment.reverseFirstName(employees[1]);
         assignment.isContainDigit(employees[3]);
         assignment.tripleSalary(employees[0]);
    }

}
